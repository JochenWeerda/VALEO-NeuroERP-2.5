name: VALEO-NeuroERP CI/CD Pipeline
# Week 3 - Reverse Execution Implementation
# Original Week 14: CI/CD Pipelines Automation

on:
  push:
    branches: [main, develop, feature/*]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 6 * * 1' # Weekly Monday at 6 AM

jobs:
  # Linting and Code Quality
  lint-and-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout VALEO-NeuroERP-3.0
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: ESLint validation
        run: npm run lint
        
      - name: TypeScript check
        run: npm run type-check

  # Security Audit & Dependencies
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run security audit
        run: npm audit --audit-level moderate
        
      - name: Snyk security scan
        uses: snyk/actions/node@master
        with:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  # Unit and Integration Testing
  test-suite:
    runs-on: ubuntu-latest
    needs: [lint-and-quality, security-scan]
    steps:
      - name: Checkout VALEO-NeuroERP-3.0
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies  
        run: npm ci
        
      - name: Start test database
        run: docker run -d --name test-db postgres:14
        
      - name: Run unit tests
        run: npm run test:unit
        
      - name: Run integration tests
        run: npm run test:integration
        env:
          DATABASE_URL: localhost:5432/test_db
          
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info

  # End-to-End Testing
  e2e-tests:
    runs-on: ubuntu-latest
    needs: test-suite
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install Playwright
        run: npx playwright install --with-deps
        
      - name: Run E2E tests
        run: npm run test:e2e:ci
        env:
          HEADLESS: true

  # Build and Deploy to Staging
  deploy-staging:
    runs-on: ubuntu-latest
    needs: [test-suite, e2e-tests]
    environment: staging
    steps:
      - name: Checkout VALEO-NeuroERP-3.0
        uses: actions/checkout@v4
        
      - name: Build applications
        run: npm run build
        env:
          NODE_ENV: staging
          
      - name: Deploy to Kubernetes staging
        uses: azure/k8s-deploy@v1.4
        with:
          manifests: k8s/*.yaml
          images: ghcr.io/valeo/neuroerp-3.0

  # Performance Testing
  performance-tests:
    runs-on: ubuntu-latest  
    needs: deploy-staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install k6
        run: |
          sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
          echo 'deb https://dl.k6.io/deb stable main' | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install k6
          
      - name: Run performance tests
        run: |
          k6 run load-testing/api-load-test.js
          k6 run load-testing/database-load-test.js

  # Deploy to Production  
  deploy-production:
    runs-on: ubuntu-latest
    needs: [deploy-staging, performance-tests]
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout VALEO-NeuroERP-3.0
        uses: actions/checkout@v4
        
      - name: Final production build
        run: npm run build
        env:
          NODE_ENV: production
          
      - name: Deploy to production Kubernetes
        uses: azure/k8s-deploy@v1.4
        with:
          manifests: k8s/
          images: ghcr.io/valeo/neuroerp-3.0:v${{ github.sha }}
          
      - name: Health check
        run: |
          curl -f ${{ secrets.PRODUCTION_URL }}/health || exit 1
          
      - name: Rollback on failure
        if: failure()
        run: kubectl rollout undo deployment/neuroerp-app

  # Notification on completion
  notify:
    runs-on: ubuntu-latest  
    needs: [deploy-production]
    if: always()
    steps:
      - name: Notify deployment status
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#valeo-kernelchannel'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}

