[{"filePath":"C:\\Users\\Jochen\\VALEO-NeuroERP-3.0\\packages\\hr-domain\\src\\app\\server.ts","messages":[{"ruleId":"@typescript-eslint/no-magic-numbers","severity":1,"message":"No magic number: 3030.","line":29,"column":41,"nodeType":"Literal","messageId":"noMagic","endLine":29,"endColumn":45},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":35,"column":18,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":35,"endColumn":21,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1076,1079],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1076,1079],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":42,"column":38,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":42,"endColumn":41,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1363,1366],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1363,1366],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":42,"column":43,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":42,"endColumn":45},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":43,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":43,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1375,1450],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":50,"column":9,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":50,"endColumn":12,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1673,1676],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1673,1676],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":69,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":69,"endColumn":31},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":131,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":131,"endColumn":34},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":140,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":140,"endColumn":30},{"ruleId":"@typescript-eslint/no-magic-numbers","severity":1,"message":"No magic number: 400.","line":179,"column":23,"nodeType":"Literal","messageId":"noMagic","endLine":179,"endColumn":26},{"ruleId":"@typescript-eslint/no-magic-numbers","severity":1,"message":"No magic number: 401.","line":186,"column":28,"nodeType":"Literal","messageId":"noMagic","endLine":186,"endColumn":31},{"ruleId":"@typescript-eslint/no-magic-numbers","severity":1,"message":"No magic number: 401.","line":187,"column":23,"nodeType":"Literal","messageId":"noMagic","endLine":187,"endColumn":26},{"ruleId":"@typescript-eslint/no-magic-numbers","severity":1,"message":"No magic number: 403.","line":194,"column":28,"nodeType":"Literal","messageId":"noMagic","endLine":194,"endColumn":31},{"ruleId":"@typescript-eslint/no-magic-numbers","severity":1,"message":"No magic number: 403.","line":195,"column":23,"nodeType":"Literal","messageId":"noMagic","endLine":195,"endColumn":26},{"ruleId":"@typescript-eslint/no-magic-numbers","severity":1,"message":"No magic number: 404.","line":202,"column":28,"nodeType":"Literal","messageId":"noMagic","endLine":202,"endColumn":31},{"ruleId":"@typescript-eslint/no-magic-numbers","severity":1,"message":"No magic number: 404.","line":203,"column":23,"nodeType":"Literal","messageId":"noMagic","endLine":203,"endColumn":26},{"ruleId":"@typescript-eslint/no-magic-numbers","severity":1,"message":"No magic number: 500.","line":210,"column":21,"nodeType":"Literal","messageId":"noMagic","endLine":210,"endColumn":24},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":217,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":217,"endColumn":32},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":218,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":218,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[5458,5504],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":223,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":223,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[5623,5670],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":226,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":226,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[5716,5765],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":236,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":236,"endColumn":21},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":238,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":238,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[5956,6022],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":248,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":248,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6231,6299],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":249,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":249,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6304,6369],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":250,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":250,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6374,6437],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":251,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":251,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6442,6502],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":252,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":252,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6507,6565],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":255,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":255,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[6595,6645],"text":""},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * HR Domain Server for VALEO NeuroERP 3.0\n * Fastify server with OpenAPI documentation\n */\n\nimport Fastify from 'fastify';\nimport swagger from '@fastify/swagger';\nimport swaggerUi from '@fastify/swagger-ui';\nimport cors from '@fastify/cors';\n// import postgres from 'postgres';\n\n// Import middleware\nimport { authMiddleware, initializeAuth } from './middleware/auth';\n\n// Import routes\nimport { registerEmployeeRoutes } from './routes/employees';\nimport { registerTimeEntryRoutes } from './routes/time-entries';\n\n// Import services\nimport { EmployeeService } from '../domain/services/employee-service';\nimport { TimeEntryService } from '../domain/services/time-entry-service';\n\n// Import repositories\nimport { PostgresEmployeeRepository } from '../infra/repo/postgres-employee-repository';\n\n// Import database schema\n\n// Configuration\nconst PORT = Number(process.env.PORT || 3030);\nconst HOST = process.env.HOST || '0.0.0.0';\n\n// Initialize database connection (placeholder)\n// const sql = postgres(POSTGRES_URL);\n// const db = drizzle(sql, { schema });\nconst db = {} as any; // Placeholder for now\n\n// Initialize repositories\nconst employeeRepository = new PostgresEmployeeRepository(db);\n// TODO: Initialize other repositories (TimeEntryRepository, etc.)\n\n// Event publisher (placeholder - would connect to NATS/Kafka)\nconst eventPublisher = async (event: any) => {\n  console.log('📤 Publishing domain event:', event.eventType, event.eventId);\n  // TODO: Implement actual event publishing to NATS/Kafka\n};\n\n// Initialize services\nconst employeeService = new EmployeeService(employeeRepository, eventPublisher);\nconst timeEntryService = new TimeEntryService(\n  {} as any, // TODO: Initialize TimeEntryRepository\n  employeeRepository,\n  eventPublisher\n);\n\n// Create Fastify instance\nconst fastify = Fastify({\n  logger: {\n    level: process.env.LOG_LEVEL || 'info',\n    transport: process.env.NODE_ENV === 'development' ? {\n      target: 'pino-pretty',\n      options: {\n        colorize: true\n      }\n    } : undefined\n  }\n});\n\n// Register plugins\nasync function registerPlugins() {\n  // CORS\n  await fastify.register(cors, {\n    origin: true,\n    credentials: true\n  });\n\n  // Swagger/OpenAPI\n  await fastify.register(swagger, {\n    openapi: {\n      info: {\n        title: 'VALEO NeuroERP 3.0 - HR Domain API',\n        description: 'Human Resources Domain API for employee management, time tracking, and payroll preparation',\n        version: '1.0.0'\n      },\n      servers: [\n        {\n          url: `http://${HOST}:${PORT}`,\n          description: 'HR Domain Server'\n        }\n      ],\n      components: {\n        securitySchemes: {\n          bearerAuth: {\n            type: 'http',\n            scheme: 'bearer',\n            bearerFormat: 'JWT'\n          }\n        }\n      },\n      security: [\n        {\n          bearerAuth: []\n        }\n      ]\n    }\n  });\n\n  await fastify.register(swaggerUi, {\n    routePrefix: '/docs',\n    uiConfig: {\n      docExpansion: 'full',\n      deepLinking: false\n    },\n    uiHooks: {\n      onRequest: function (_request, _reply, next) {\n        next();\n      },\n      preHandler: function (_request, _reply, next) {\n        next();\n      }\n    },\n    staticCSP: true,\n    transformStaticCSP: (header) => header,\n    transformSpecification: (swaggerObject) => {\n      return swaggerObject;\n    },\n    transformSpecificationClone: true\n  });\n}\n\n// Register middleware\nasync function registerMiddleware() {\n  // Initialize authentication\n  await initializeAuth();\n\n  // Add authentication middleware to all routes\n  fastify.addHook('onRequest', authMiddleware);\n}\n\n// Register routes\nasync function registerRoutes() {\n  // Health check endpoints\n  fastify.get('/health', {}, async () => {\n    return {\n      ok: true,\n      service: 'hr-domain',\n      timestamp: new Date().toISOString(),\n      uptime: process.uptime()\n    };\n  });\n\n  fastify.get('/ready', {}, async () => {\n    // TODO: Test database connection when implemented\n    return {\n      ok: true,\n      database: true,\n      timestamp: new Date().toISOString()\n    };\n  });\n\n  fastify.get('/live', {}, async () => {\n    return {\n      ok: true,\n      timestamp: new Date().toISOString()\n    };\n  });\n\n  // Register domain routes\n  registerEmployeeRoutes(fastify, employeeService);\n  registerTimeEntryRoutes(fastify, timeEntryService);\n  // TODO: Register other domain routes (shifts, leaves, payroll, roles)\n}\n\n// Error handler\nfastify.setErrorHandler(async (error, request, reply) => {\n  fastify.log.error(error);\n\n  // Handle validation errors\n  if (error.validation) {\n    return reply.code(400).send({\n      error: 'Validation failed',\n      details: error.validation\n    });\n  }\n\n  // Handle authentication errors\n  if (error.statusCode === 401) {\n    return reply.code(401).send({\n      error: 'Unauthorized',\n      message: error.message\n    });\n  }\n\n  // Handle authorization errors\n  if (error.statusCode === 403) {\n    return reply.code(403).send({\n      error: 'Forbidden',\n      message: error.message\n    });\n  }\n\n  // Handle not found errors\n  if (error.statusCode === 404) {\n    return reply.code(404).send({\n      error: 'Not found',\n      message: error.message\n    });\n  }\n\n  // Default error response\n  return reply.code(500).send({\n    error: 'Internal server error',\n    message: process.env.NODE_ENV === 'development' ? error.message : 'An unexpected error occurred'\n  });\n});\n\n// Graceful shutdown\nasync function gracefulShutdown() {\n  console.log('🔄 Gracefully shutting down...');\n  \n  try {\n    await fastify.close();\n    // await sql.end(); // TODO: Close database connection when implemented\n    console.log('✅ Server shut down successfully');\n    process.exit(0);\n  } catch (error) {\n    console.error('❌ Error during shutdown:', error);\n    process.exit(1);\n  }\n}\n\n// Handle shutdown signals\nprocess.on('SIGTERM', gracefulShutdown);\nprocess.on('SIGINT', gracefulShutdown);\n\n// Start server\nasync function start() {\n  try {\n    console.log('🚀 Starting VALEO NeuroERP 3.0 HR Domain Server...');\n    \n    // Register everything\n    await registerPlugins();\n    await registerMiddleware();\n    await registerRoutes();\n\n    // Start listening\n    await fastify.listen({ port: PORT, host: HOST });\n    \n    console.log(`✅ HR Domain Server running on http://${HOST}:${PORT}`);\n    console.log(`📚 API Documentation: http://${HOST}:${PORT}/docs`);\n    console.log(`❤️  Health Check: http://${HOST}:${PORT}/health`);\n    console.log(`🔧 Ready Check: http://${HOST}:${PORT}/ready`);\n    console.log(`💓 Live Check: http://${HOST}:${PORT}/live`);\n    \n  } catch (error) {\n    console.error('❌ Failed to start server:', error);\n    process.exit(1);\n  }\n}\n\n// Start the server\nif (require.main === module) {\n  start();\n}\n\nexport default fastify;\n\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]},{"filePath":"C:\\Users\\Jochen\\VALEO-NeuroERP-3.0\\packages\\hr-domain\\src\\app\\simple-server.ts","messages":[{"ruleId":"@typescript-eslint/no-magic-numbers","severity":1,"message":"No magic number: 3030.","line":11,"column":41,"nodeType":"Literal","messageId":"noMagic","endLine":11,"endColumn":45},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":16,"column":38,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":16,"endColumn":41,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[548,551],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[548,551],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":16,"column":43,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":16,"endColumn":45},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":17,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":17,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[561,636],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":62,"column":34,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":62,"endColumn":37,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1611,1614],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1611,1614],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-magic-numbers","severity":1,"message":"No magic number: 201.","line":68,"column":23,"nodeType":"Literal","messageId":"noMagic","endLine":68,"endColumn":26},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":70,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":70,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1880,1929],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"@typescript-eslint/no-magic-numbers","severity":1,"message":"No magic number: 400.","line":71,"column":23,"nodeType":"Literal","messageId":"noMagic","endLine":71,"endColumn":26},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":81,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":81,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2335,2383],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"@typescript-eslint/no-magic-numbers","severity":1,"message":"No magic number: 404.","line":82,"column":23,"nodeType":"Literal","messageId":"noMagic","endLine":82,"endColumn":26},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":91,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":91,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2718,2767],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"@typescript-eslint/no-magic-numbers","severity":1,"message":"No magic number: 500.","line":92,"column":23,"nodeType":"Literal","messageId":"noMagic","endLine":92,"endColumn":26},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":101,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":101,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[3088,3147],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"@typescript-eslint/no-magic-numbers","severity":1,"message":"No magic number: 500.","line":102,"column":23,"nodeType":"Literal","messageId":"noMagic","endLine":102,"endColumn":26},{"ruleId":"@typescript-eslint/no-magic-numbers","severity":1,"message":"No magic number: 500.","line":109,"column":21,"nodeType":"Literal","messageId":"noMagic","endLine":109,"endColumn":24},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":116,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":116,"endColumn":32},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":117,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":117,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[3598,3644],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":120,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":120,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[3687,3734],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":123,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":123,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[3783,3832],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":1,"message":"Missing return type on function.","line":133,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":133,"endColumn":21},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":135,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":135,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4035,4101],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":139,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":139,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4174,4242],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":140,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":140,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4248,4311],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":141,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":141,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4317,4377],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":142,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":142,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4383,4441],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":145,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":145,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[4474,4524],"text":""},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\n * Simple HR Domain Server for VALEO NeuroERP 3.0\r\n * Simplified version without complex Fastify types\r\n */\r\n\r\nimport Fastify from 'fastify';\r\nimport { EmployeeService } from '../domain/services/employee-service';\r\nimport { PostgresEmployeeRepository } from '../infra/repo/postgres-employee-repository';\r\n\r\n// Configuration\r\nconst PORT = Number(process.env.PORT || 3030);\r\nconst HOST = process.env.HOST || '0.0.0.0';\r\n\r\n// Initialize services\r\nconst employeeRepository = new PostgresEmployeeRepository();\r\nconst eventPublisher = async (event: any) => {\r\n  console.log('📤 Publishing domain event:', event.eventType, event.eventId);\r\n};\r\nconst employeeService = new EmployeeService(employeeRepository, eventPublisher);\r\n\r\n// Create Fastify instance\r\nconst fastify = Fastify({\r\n  logger: {\r\n    level: process.env.LOG_LEVEL || 'info',\r\n    transport: process.env.NODE_ENV === 'development' ? {\r\n      target: 'pino-pretty',\r\n      options: {\r\n        colorize: true\r\n      }\r\n    } : undefined\r\n  }\r\n});\r\n\r\n// Health check endpoints\r\nfastify.get('/health', async () => {\r\n  return {\r\n    ok: true,\r\n    service: 'hr-domain',\r\n    timestamp: new Date().toISOString(),\r\n    uptime: process.uptime()\r\n  };\r\n});\r\n\r\nfastify.get('/ready', async () => {\r\n  return {\r\n    ok: true,\r\n    database: true,\r\n    timestamp: new Date().toISOString()\r\n  };\r\n});\r\n\r\nfastify.get('/live', async () => {\r\n  return {\r\n    ok: true,\r\n    timestamp: new Date().toISOString()\r\n  };\r\n});\r\n\r\n// Employee routes (simplified)\r\nfastify.post('/hr/api/v1/employees', async (request, reply) => {\r\n  try {\r\n    const body = request.body as any;\r\n    const employee = await employeeService.createEmployee({\r\n      tenantId: 'default-tenant', // TODO: Get from auth\r\n      createdBy: 'system', // TODO: Get from auth\r\n      ...body\r\n    });\r\n    return reply.code(201).send(employee);\r\n  } catch (error) {\r\n    console.error('Error creating employee:', error);\r\n    return reply.code(400).send({ error: error instanceof Error ? error.message : 'Failed to create employee' });\r\n  }\r\n});\r\n\r\nfastify.get('/hr/api/v1/employees/:id', async (request, reply) => {\r\n  try {\r\n    const params = request.params as { id: string };\r\n    const employee = await employeeService.getEmployee('default-tenant', params.id);\r\n    return reply.send(employee);\r\n  } catch (error) {\r\n    console.error('Error getting employee:', error);\r\n    return reply.code(404).send({ error: error instanceof Error ? error.message : 'Employee not found' });\r\n  }\r\n});\r\n\r\nfastify.get('/hr/api/v1/employees', async (_request, reply) => {\r\n  try {\r\n    const employees = await employeeService.listEmployees('default-tenant');\r\n    return reply.send(employees);\r\n  } catch (error) {\r\n    console.error('Error listing employees:', error);\r\n    return reply.code(500).send({ error: 'Failed to list employees' });\r\n  }\r\n});\r\n\r\nfastify.get('/hr/api/v1/employees/statistics', async (_request, reply) => {\r\n  try {\r\n    const statistics = await employeeService.getEmployeeStatistics('default-tenant');\r\n    return reply.send(statistics);\r\n  } catch (error) {\r\n    console.error('Error getting employee statistics:', error);\r\n    return reply.code(500).send({ error: 'Failed to get employee statistics' });\r\n  }\r\n});\r\n\r\n// Error handler\r\nfastify.setErrorHandler(async (error, _request, reply) => {\r\n  fastify.log.error(error);\r\n  return reply.code(500).send({\r\n    error: 'Internal server error',\r\n    message: process.env.NODE_ENV === 'development' ? error.message : 'An unexpected error occurred'\r\n  });\r\n});\r\n\r\n// Graceful shutdown\r\nasync function gracefulShutdown() {\r\n  console.log('🔄 Gracefully shutting down...');\r\n  try {\r\n    await fastify.close();\r\n    console.log('✅ Server shut down successfully');\r\n    process.exit(0);\r\n  } catch (error) {\r\n    console.error('❌ Error during shutdown:', error);\r\n    process.exit(1);\r\n  }\r\n}\r\n\r\n// Handle shutdown signals\r\nprocess.on('SIGTERM', gracefulShutdown);\r\nprocess.on('SIGINT', gracefulShutdown);\r\n\r\n// Start server\r\nasync function start() {\r\n  try {\r\n    console.log('🚀 Starting VALEO NeuroERP 3.0 HR Domain Server...');\r\n    \r\n    await fastify.listen({ port: PORT, host: HOST });\r\n    \r\n    console.log(`✅ HR Domain Server running on http://${HOST}:${PORT}`);\r\n    console.log(`❤️  Health Check: http://${HOST}:${PORT}/health`);\r\n    console.log(`🔧 Ready Check: http://${HOST}:${PORT}/ready`);\r\n    console.log(`💓 Live Check: http://${HOST}:${PORT}/live`);\r\n    \r\n  } catch (error) {\r\n    console.error('❌ Failed to start server:', error);\r\n    process.exit(1);\r\n  }\r\n}\r\n\r\n// Start the server\r\nif (require.main === module) {\r\n  start();\r\n}\r\n\r\nexport default fastify;\r\n\r\n\r\n\r\n","usedDeprecatedRules":[{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]}]}]
