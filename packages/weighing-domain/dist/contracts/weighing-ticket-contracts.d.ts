import { z } from 'zod';
export declare const WeighingTypeSchema: z.ZodEnum<["Vehicle", "Container", "Silo", "Manual"]>;
export declare const WeighingStatusSchema: z.ZodEnum<["Draft", "InProgress", "Completed", "Cancelled", "Error"]>;
export declare const CommodityTypeSchema: z.ZodEnum<["WHEAT", "BARLEY", "RAPESEED", "SOYMEAL", "COMPOUND_FEED", "FERTILIZER", "OTHER"]>;
export declare const WeighingModeSchema: z.ZodEnum<["Gross", "Tare", "Net"]>;
export declare const WeighingDataContractSchema: z.ZodObject<{
    weight: z.ZodNumber;
    unit: z.ZodEnum<["kg", "t"]>;
    timestamp: z.ZodString;
    scaleId: z.ZodString;
    operatorId: z.ZodOptional<z.ZodString>;
    notes: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    scaleId: string;
    timestamp: string;
    weight: number;
    unit: "kg" | "t";
    notes?: string | undefined;
    operatorId?: string | undefined;
}, {
    scaleId: string;
    timestamp: string;
    weight: number;
    unit: "kg" | "t";
    notes?: string | undefined;
    operatorId?: string | undefined;
}>;
export declare const WeighingLineContractSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    sku: z.ZodString;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    quantity: z.ZodNumber;
    unitPrice: z.ZodNumber;
    discount: z.ZodDefault<z.ZodNumber>;
    totalNet: z.ZodNumber;
    totalGross: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    name: string;
    sku: string;
    quantity: number;
    unitPrice: number;
    discount: number;
    totalNet: number;
    totalGross: number;
    id?: string | undefined;
    description?: string | undefined;
}, {
    name: string;
    sku: string;
    quantity: number;
    unitPrice: number;
    totalNet: number;
    totalGross: number;
    id?: string | undefined;
    description?: string | undefined;
    discount?: number | undefined;
}>;
export declare const WeighingTicketContractSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    tenantId: z.ZodString;
    ticketNumber: z.ZodString;
    type: z.ZodEnum<["Vehicle", "Container", "Silo", "Manual"]>;
    status: z.ZodEnum<["Draft", "InProgress", "Completed", "Cancelled", "Error"]>;
    licensePlate: z.ZodOptional<z.ZodString>;
    containerNumber: z.ZodOptional<z.ZodString>;
    siloId: z.ZodOptional<z.ZodString>;
    commodity: z.ZodEnum<["WHEAT", "BARLEY", "RAPESEED", "SOYMEAL", "COMPOUND_FEED", "FERTILIZER", "OTHER"]>;
    commodityDescription: z.ZodOptional<z.ZodString>;
    grossWeight: z.ZodOptional<z.ZodObject<{
        weight: z.ZodNumber;
        unit: z.ZodEnum<["kg", "t"]>;
        timestamp: z.ZodString;
        scaleId: z.ZodString;
        operatorId: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        scaleId: string;
        timestamp: string;
        weight: number;
        unit: "kg" | "t";
        notes?: string | undefined;
        operatorId?: string | undefined;
    }, {
        scaleId: string;
        timestamp: string;
        weight: number;
        unit: "kg" | "t";
        notes?: string | undefined;
        operatorId?: string | undefined;
    }>>;
    tareWeight: z.ZodOptional<z.ZodObject<{
        weight: z.ZodNumber;
        unit: z.ZodEnum<["kg", "t"]>;
        timestamp: z.ZodString;
        scaleId: z.ZodString;
        operatorId: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        scaleId: string;
        timestamp: string;
        weight: number;
        unit: "kg" | "t";
        notes?: string | undefined;
        operatorId?: string | undefined;
    }, {
        scaleId: string;
        timestamp: string;
        weight: number;
        unit: "kg" | "t";
        notes?: string | undefined;
        operatorId?: string | undefined;
    }>>;
    netWeight: z.ZodOptional<z.ZodNumber>;
    netWeightUnit: z.ZodOptional<z.ZodEnum<["kg", "t"]>>;
    expectedWeight: z.ZodOptional<z.ZodNumber>;
    tolerancePercent: z.ZodDefault<z.ZodNumber>;
    isWithinTolerance: z.ZodOptional<z.ZodBoolean>;
    contractId: z.ZodOptional<z.ZodString>;
    orderId: z.ZodOptional<z.ZodString>;
    deliveryNoteId: z.ZodOptional<z.ZodString>;
    anprRecordId: z.ZodOptional<z.ZodString>;
    autoAssigned: z.ZodDefault<z.ZodBoolean>;
    gateId: z.ZodOptional<z.ZodString>;
    slotId: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodOptional<z.ZodString>;
    updatedAt: z.ZodOptional<z.ZodString>;
    completedAt: z.ZodOptional<z.ZodString>;
    version: z.ZodDefault<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    tenantId: string;
    ticketNumber: string;
    type: "Vehicle" | "Container" | "Silo" | "Manual";
    status: "Draft" | "InProgress" | "Completed" | "Cancelled" | "Error";
    commodity: "WHEAT" | "BARLEY" | "RAPESEED" | "SOYMEAL" | "COMPOUND_FEED" | "FERTILIZER" | "OTHER";
    tolerancePercent: number;
    autoAssigned: boolean;
    version: number;
    id?: string | undefined;
    licensePlate?: string | undefined;
    containerNumber?: string | undefined;
    siloId?: string | undefined;
    commodityDescription?: string | undefined;
    grossWeight?: {
        scaleId: string;
        timestamp: string;
        weight: number;
        unit: "kg" | "t";
        notes?: string | undefined;
        operatorId?: string | undefined;
    } | undefined;
    tareWeight?: {
        scaleId: string;
        timestamp: string;
        weight: number;
        unit: "kg" | "t";
        notes?: string | undefined;
        operatorId?: string | undefined;
    } | undefined;
    netWeight?: number | undefined;
    netWeightUnit?: "kg" | "t" | undefined;
    expectedWeight?: number | undefined;
    isWithinTolerance?: boolean | undefined;
    contractId?: string | undefined;
    orderId?: string | undefined;
    deliveryNoteId?: string | undefined;
    anprRecordId?: string | undefined;
    gateId?: string | undefined;
    slotId?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    completedAt?: string | undefined;
}, {
    tenantId: string;
    ticketNumber: string;
    type: "Vehicle" | "Container" | "Silo" | "Manual";
    status: "Draft" | "InProgress" | "Completed" | "Cancelled" | "Error";
    commodity: "WHEAT" | "BARLEY" | "RAPESEED" | "SOYMEAL" | "COMPOUND_FEED" | "FERTILIZER" | "OTHER";
    id?: string | undefined;
    licensePlate?: string | undefined;
    containerNumber?: string | undefined;
    siloId?: string | undefined;
    commodityDescription?: string | undefined;
    grossWeight?: {
        scaleId: string;
        timestamp: string;
        weight: number;
        unit: "kg" | "t";
        notes?: string | undefined;
        operatorId?: string | undefined;
    } | undefined;
    tareWeight?: {
        scaleId: string;
        timestamp: string;
        weight: number;
        unit: "kg" | "t";
        notes?: string | undefined;
        operatorId?: string | undefined;
    } | undefined;
    netWeight?: number | undefined;
    netWeightUnit?: "kg" | "t" | undefined;
    expectedWeight?: number | undefined;
    tolerancePercent?: number | undefined;
    isWithinTolerance?: boolean | undefined;
    contractId?: string | undefined;
    orderId?: string | undefined;
    deliveryNoteId?: string | undefined;
    anprRecordId?: string | undefined;
    autoAssigned?: boolean | undefined;
    gateId?: string | undefined;
    slotId?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    completedAt?: string | undefined;
    version?: number | undefined;
}>;
export declare const CreateWeighingTicketContractSchema: z.ZodObject<{
    type: z.ZodEnum<["Vehicle", "Container", "Silo", "Manual"]>;
    licensePlate: z.ZodOptional<z.ZodString>;
    containerNumber: z.ZodOptional<z.ZodString>;
    siloId: z.ZodOptional<z.ZodString>;
    commodity: z.ZodEnum<["WHEAT", "BARLEY", "RAPESEED", "SOYMEAL", "COMPOUND_FEED", "FERTILIZER", "OTHER"]>;
    commodityDescription: z.ZodOptional<z.ZodString>;
    expectedWeight: z.ZodOptional<z.ZodNumber>;
    tolerancePercent: z.ZodOptional<z.ZodNumber>;
    contractId: z.ZodOptional<z.ZodString>;
    orderId: z.ZodOptional<z.ZodString>;
    deliveryNoteId: z.ZodOptional<z.ZodString>;
    gateId: z.ZodOptional<z.ZodString>;
    notes: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    type: "Vehicle" | "Container" | "Silo" | "Manual";
    commodity: "WHEAT" | "BARLEY" | "RAPESEED" | "SOYMEAL" | "COMPOUND_FEED" | "FERTILIZER" | "OTHER";
    licensePlate?: string | undefined;
    containerNumber?: string | undefined;
    siloId?: string | undefined;
    commodityDescription?: string | undefined;
    expectedWeight?: number | undefined;
    tolerancePercent?: number | undefined;
    contractId?: string | undefined;
    orderId?: string | undefined;
    deliveryNoteId?: string | undefined;
    gateId?: string | undefined;
    notes?: string | undefined;
}, {
    type: "Vehicle" | "Container" | "Silo" | "Manual";
    commodity: "WHEAT" | "BARLEY" | "RAPESEED" | "SOYMEAL" | "COMPOUND_FEED" | "FERTILIZER" | "OTHER";
    licensePlate?: string | undefined;
    containerNumber?: string | undefined;
    siloId?: string | undefined;
    commodityDescription?: string | undefined;
    expectedWeight?: number | undefined;
    tolerancePercent?: number | undefined;
    contractId?: string | undefined;
    orderId?: string | undefined;
    deliveryNoteId?: string | undefined;
    gateId?: string | undefined;
    notes?: string | undefined;
}>;
export declare const UpdateWeighingTicketContractSchema: z.ZodObject<{
    status: z.ZodOptional<z.ZodEnum<["Draft", "InProgress", "Completed", "Cancelled", "Error"]>>;
    commodityDescription: z.ZodOptional<z.ZodString>;
    expectedWeight: z.ZodOptional<z.ZodNumber>;
    tolerancePercent: z.ZodOptional<z.ZodNumber>;
    contractId: z.ZodOptional<z.ZodString>;
    orderId: z.ZodOptional<z.ZodString>;
    deliveryNoteId: z.ZodOptional<z.ZodString>;
    gateId: z.ZodOptional<z.ZodString>;
    notes: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    status?: "Draft" | "InProgress" | "Completed" | "Cancelled" | "Error" | undefined;
    commodityDescription?: string | undefined;
    expectedWeight?: number | undefined;
    tolerancePercent?: number | undefined;
    contractId?: string | undefined;
    orderId?: string | undefined;
    deliveryNoteId?: string | undefined;
    gateId?: string | undefined;
    notes?: string | undefined;
}, {
    status?: "Draft" | "InProgress" | "Completed" | "Cancelled" | "Error" | undefined;
    commodityDescription?: string | undefined;
    expectedWeight?: number | undefined;
    tolerancePercent?: number | undefined;
    contractId?: string | undefined;
    orderId?: string | undefined;
    deliveryNoteId?: string | undefined;
    gateId?: string | undefined;
    notes?: string | undefined;
}>;
export declare const RecordWeightContractSchema: z.ZodObject<{
    mode: z.ZodEnum<["Gross", "Tare", "Net"]>;
    weight: z.ZodNumber;
    unit: z.ZodEnum<["kg", "t"]>;
    scaleId: z.ZodString;
    operatorId: z.ZodOptional<z.ZodString>;
    notes: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    mode: "Gross" | "Tare" | "Net";
    scaleId: string;
    weight: number;
    unit: "kg" | "t";
    notes?: string | undefined;
    operatorId?: string | undefined;
}, {
    mode: "Gross" | "Tare" | "Net";
    scaleId: string;
    weight: number;
    unit: "kg" | "t";
    notes?: string | undefined;
    operatorId?: string | undefined;
}>;
export declare const WeighingTicketQueryContractSchema: z.ZodObject<{
    tenantId: z.ZodOptional<z.ZodString>;
    status: z.ZodOptional<z.ZodEnum<["Draft", "InProgress", "Completed", "Cancelled", "Error"]>>;
    type: z.ZodOptional<z.ZodEnum<["Vehicle", "Container", "Silo", "Manual"]>>;
    commodity: z.ZodOptional<z.ZodEnum<["WHEAT", "BARLEY", "RAPESEED", "SOYMEAL", "COMPOUND_FEED", "FERTILIZER", "OTHER"]>>;
    licensePlate: z.ZodOptional<z.ZodString>;
    gateId: z.ZodOptional<z.ZodString>;
    contractId: z.ZodOptional<z.ZodString>;
    orderId: z.ZodOptional<z.ZodString>;
    fromDate: z.ZodOptional<z.ZodString>;
    toDate: z.ZodOptional<z.ZodString>;
    isWithinTolerance: z.ZodOptional<z.ZodBoolean>;
    page: z.ZodDefault<z.ZodOptional<z.ZodEffects<z.ZodString, number, string>>>;
    pageSize: z.ZodDefault<z.ZodOptional<z.ZodEffects<z.ZodString, number, string>>>;
}, "strip", z.ZodTypeAny, {
    page: number;
    pageSize: number;
    tenantId?: string | undefined;
    type?: "Vehicle" | "Container" | "Silo" | "Manual" | undefined;
    status?: "Draft" | "InProgress" | "Completed" | "Cancelled" | "Error" | undefined;
    licensePlate?: string | undefined;
    commodity?: "WHEAT" | "BARLEY" | "RAPESEED" | "SOYMEAL" | "COMPOUND_FEED" | "FERTILIZER" | "OTHER" | undefined;
    isWithinTolerance?: boolean | undefined;
    contractId?: string | undefined;
    orderId?: string | undefined;
    gateId?: string | undefined;
    fromDate?: string | undefined;
    toDate?: string | undefined;
}, {
    tenantId?: string | undefined;
    type?: "Vehicle" | "Container" | "Silo" | "Manual" | undefined;
    status?: "Draft" | "InProgress" | "Completed" | "Cancelled" | "Error" | undefined;
    licensePlate?: string | undefined;
    commodity?: "WHEAT" | "BARLEY" | "RAPESEED" | "SOYMEAL" | "COMPOUND_FEED" | "FERTILIZER" | "OTHER" | undefined;
    isWithinTolerance?: boolean | undefined;
    contractId?: string | undefined;
    orderId?: string | undefined;
    gateId?: string | undefined;
    fromDate?: string | undefined;
    toDate?: string | undefined;
    page?: string | undefined;
    pageSize?: string | undefined;
}>;
export declare const WeighingTicketResponseContractSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    tenantId: z.ZodString;
    ticketNumber: z.ZodString;
    type: z.ZodEnum<["Vehicle", "Container", "Silo", "Manual"]>;
    status: z.ZodEnum<["Draft", "InProgress", "Completed", "Cancelled", "Error"]>;
    licensePlate: z.ZodOptional<z.ZodString>;
    containerNumber: z.ZodOptional<z.ZodString>;
    siloId: z.ZodOptional<z.ZodString>;
    commodity: z.ZodEnum<["WHEAT", "BARLEY", "RAPESEED", "SOYMEAL", "COMPOUND_FEED", "FERTILIZER", "OTHER"]>;
    commodityDescription: z.ZodOptional<z.ZodString>;
    grossWeight: z.ZodOptional<z.ZodObject<{
        weight: z.ZodNumber;
        unit: z.ZodEnum<["kg", "t"]>;
        timestamp: z.ZodString;
        scaleId: z.ZodString;
        operatorId: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        scaleId: string;
        timestamp: string;
        weight: number;
        unit: "kg" | "t";
        notes?: string | undefined;
        operatorId?: string | undefined;
    }, {
        scaleId: string;
        timestamp: string;
        weight: number;
        unit: "kg" | "t";
        notes?: string | undefined;
        operatorId?: string | undefined;
    }>>;
    tareWeight: z.ZodOptional<z.ZodObject<{
        weight: z.ZodNumber;
        unit: z.ZodEnum<["kg", "t"]>;
        timestamp: z.ZodString;
        scaleId: z.ZodString;
        operatorId: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        scaleId: string;
        timestamp: string;
        weight: number;
        unit: "kg" | "t";
        notes?: string | undefined;
        operatorId?: string | undefined;
    }, {
        scaleId: string;
        timestamp: string;
        weight: number;
        unit: "kg" | "t";
        notes?: string | undefined;
        operatorId?: string | undefined;
    }>>;
    netWeight: z.ZodOptional<z.ZodNumber>;
    netWeightUnit: z.ZodOptional<z.ZodEnum<["kg", "t"]>>;
    expectedWeight: z.ZodOptional<z.ZodNumber>;
    tolerancePercent: z.ZodDefault<z.ZodNumber>;
    isWithinTolerance: z.ZodOptional<z.ZodBoolean>;
    contractId: z.ZodOptional<z.ZodString>;
    orderId: z.ZodOptional<z.ZodString>;
    deliveryNoteId: z.ZodOptional<z.ZodString>;
    anprRecordId: z.ZodOptional<z.ZodString>;
    autoAssigned: z.ZodDefault<z.ZodBoolean>;
    gateId: z.ZodOptional<z.ZodString>;
    slotId: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodOptional<z.ZodString>;
    updatedAt: z.ZodOptional<z.ZodString>;
    completedAt: z.ZodOptional<z.ZodString>;
    version: z.ZodDefault<z.ZodNumber>;
}, "tenantId">, "strip", z.ZodTypeAny, {
    ticketNumber: string;
    type: "Vehicle" | "Container" | "Silo" | "Manual";
    status: "Draft" | "InProgress" | "Completed" | "Cancelled" | "Error";
    commodity: "WHEAT" | "BARLEY" | "RAPESEED" | "SOYMEAL" | "COMPOUND_FEED" | "FERTILIZER" | "OTHER";
    tolerancePercent: number;
    autoAssigned: boolean;
    version: number;
    id?: string | undefined;
    licensePlate?: string | undefined;
    containerNumber?: string | undefined;
    siloId?: string | undefined;
    commodityDescription?: string | undefined;
    grossWeight?: {
        scaleId: string;
        timestamp: string;
        weight: number;
        unit: "kg" | "t";
        notes?: string | undefined;
        operatorId?: string | undefined;
    } | undefined;
    tareWeight?: {
        scaleId: string;
        timestamp: string;
        weight: number;
        unit: "kg" | "t";
        notes?: string | undefined;
        operatorId?: string | undefined;
    } | undefined;
    netWeight?: number | undefined;
    netWeightUnit?: "kg" | "t" | undefined;
    expectedWeight?: number | undefined;
    isWithinTolerance?: boolean | undefined;
    contractId?: string | undefined;
    orderId?: string | undefined;
    deliveryNoteId?: string | undefined;
    anprRecordId?: string | undefined;
    gateId?: string | undefined;
    slotId?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    completedAt?: string | undefined;
}, {
    ticketNumber: string;
    type: "Vehicle" | "Container" | "Silo" | "Manual";
    status: "Draft" | "InProgress" | "Completed" | "Cancelled" | "Error";
    commodity: "WHEAT" | "BARLEY" | "RAPESEED" | "SOYMEAL" | "COMPOUND_FEED" | "FERTILIZER" | "OTHER";
    id?: string | undefined;
    licensePlate?: string | undefined;
    containerNumber?: string | undefined;
    siloId?: string | undefined;
    commodityDescription?: string | undefined;
    grossWeight?: {
        scaleId: string;
        timestamp: string;
        weight: number;
        unit: "kg" | "t";
        notes?: string | undefined;
        operatorId?: string | undefined;
    } | undefined;
    tareWeight?: {
        scaleId: string;
        timestamp: string;
        weight: number;
        unit: "kg" | "t";
        notes?: string | undefined;
        operatorId?: string | undefined;
    } | undefined;
    netWeight?: number | undefined;
    netWeightUnit?: "kg" | "t" | undefined;
    expectedWeight?: number | undefined;
    tolerancePercent?: number | undefined;
    isWithinTolerance?: boolean | undefined;
    contractId?: string | undefined;
    orderId?: string | undefined;
    deliveryNoteId?: string | undefined;
    anprRecordId?: string | undefined;
    autoAssigned?: boolean | undefined;
    gateId?: string | undefined;
    slotId?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    completedAt?: string | undefined;
    version?: number | undefined;
}>;
export declare const WeighingTicketListResponseContractSchema: z.ZodObject<{
    data: z.ZodArray<z.ZodObject<Omit<{
        id: z.ZodOptional<z.ZodString>;
        tenantId: z.ZodString;
        ticketNumber: z.ZodString;
        type: z.ZodEnum<["Vehicle", "Container", "Silo", "Manual"]>;
        status: z.ZodEnum<["Draft", "InProgress", "Completed", "Cancelled", "Error"]>;
        licensePlate: z.ZodOptional<z.ZodString>;
        containerNumber: z.ZodOptional<z.ZodString>;
        siloId: z.ZodOptional<z.ZodString>;
        commodity: z.ZodEnum<["WHEAT", "BARLEY", "RAPESEED", "SOYMEAL", "COMPOUND_FEED", "FERTILIZER", "OTHER"]>;
        commodityDescription: z.ZodOptional<z.ZodString>;
        grossWeight: z.ZodOptional<z.ZodObject<{
            weight: z.ZodNumber;
            unit: z.ZodEnum<["kg", "t"]>;
            timestamp: z.ZodString;
            scaleId: z.ZodString;
            operatorId: z.ZodOptional<z.ZodString>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            scaleId: string;
            timestamp: string;
            weight: number;
            unit: "kg" | "t";
            notes?: string | undefined;
            operatorId?: string | undefined;
        }, {
            scaleId: string;
            timestamp: string;
            weight: number;
            unit: "kg" | "t";
            notes?: string | undefined;
            operatorId?: string | undefined;
        }>>;
        tareWeight: z.ZodOptional<z.ZodObject<{
            weight: z.ZodNumber;
            unit: z.ZodEnum<["kg", "t"]>;
            timestamp: z.ZodString;
            scaleId: z.ZodString;
            operatorId: z.ZodOptional<z.ZodString>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            scaleId: string;
            timestamp: string;
            weight: number;
            unit: "kg" | "t";
            notes?: string | undefined;
            operatorId?: string | undefined;
        }, {
            scaleId: string;
            timestamp: string;
            weight: number;
            unit: "kg" | "t";
            notes?: string | undefined;
            operatorId?: string | undefined;
        }>>;
        netWeight: z.ZodOptional<z.ZodNumber>;
        netWeightUnit: z.ZodOptional<z.ZodEnum<["kg", "t"]>>;
        expectedWeight: z.ZodOptional<z.ZodNumber>;
        tolerancePercent: z.ZodDefault<z.ZodNumber>;
        isWithinTolerance: z.ZodOptional<z.ZodBoolean>;
        contractId: z.ZodOptional<z.ZodString>;
        orderId: z.ZodOptional<z.ZodString>;
        deliveryNoteId: z.ZodOptional<z.ZodString>;
        anprRecordId: z.ZodOptional<z.ZodString>;
        autoAssigned: z.ZodDefault<z.ZodBoolean>;
        gateId: z.ZodOptional<z.ZodString>;
        slotId: z.ZodOptional<z.ZodString>;
        createdAt: z.ZodOptional<z.ZodString>;
        updatedAt: z.ZodOptional<z.ZodString>;
        completedAt: z.ZodOptional<z.ZodString>;
        version: z.ZodDefault<z.ZodNumber>;
    }, "tenantId">, "strip", z.ZodTypeAny, {
        ticketNumber: string;
        type: "Vehicle" | "Container" | "Silo" | "Manual";
        status: "Draft" | "InProgress" | "Completed" | "Cancelled" | "Error";
        commodity: "WHEAT" | "BARLEY" | "RAPESEED" | "SOYMEAL" | "COMPOUND_FEED" | "FERTILIZER" | "OTHER";
        tolerancePercent: number;
        autoAssigned: boolean;
        version: number;
        id?: string | undefined;
        licensePlate?: string | undefined;
        containerNumber?: string | undefined;
        siloId?: string | undefined;
        commodityDescription?: string | undefined;
        grossWeight?: {
            scaleId: string;
            timestamp: string;
            weight: number;
            unit: "kg" | "t";
            notes?: string | undefined;
            operatorId?: string | undefined;
        } | undefined;
        tareWeight?: {
            scaleId: string;
            timestamp: string;
            weight: number;
            unit: "kg" | "t";
            notes?: string | undefined;
            operatorId?: string | undefined;
        } | undefined;
        netWeight?: number | undefined;
        netWeightUnit?: "kg" | "t" | undefined;
        expectedWeight?: number | undefined;
        isWithinTolerance?: boolean | undefined;
        contractId?: string | undefined;
        orderId?: string | undefined;
        deliveryNoteId?: string | undefined;
        anprRecordId?: string | undefined;
        gateId?: string | undefined;
        slotId?: string | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        completedAt?: string | undefined;
    }, {
        ticketNumber: string;
        type: "Vehicle" | "Container" | "Silo" | "Manual";
        status: "Draft" | "InProgress" | "Completed" | "Cancelled" | "Error";
        commodity: "WHEAT" | "BARLEY" | "RAPESEED" | "SOYMEAL" | "COMPOUND_FEED" | "FERTILIZER" | "OTHER";
        id?: string | undefined;
        licensePlate?: string | undefined;
        containerNumber?: string | undefined;
        siloId?: string | undefined;
        commodityDescription?: string | undefined;
        grossWeight?: {
            scaleId: string;
            timestamp: string;
            weight: number;
            unit: "kg" | "t";
            notes?: string | undefined;
            operatorId?: string | undefined;
        } | undefined;
        tareWeight?: {
            scaleId: string;
            timestamp: string;
            weight: number;
            unit: "kg" | "t";
            notes?: string | undefined;
            operatorId?: string | undefined;
        } | undefined;
        netWeight?: number | undefined;
        netWeightUnit?: "kg" | "t" | undefined;
        expectedWeight?: number | undefined;
        tolerancePercent?: number | undefined;
        isWithinTolerance?: boolean | undefined;
        contractId?: string | undefined;
        orderId?: string | undefined;
        deliveryNoteId?: string | undefined;
        anprRecordId?: string | undefined;
        autoAssigned?: boolean | undefined;
        gateId?: string | undefined;
        slotId?: string | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        completedAt?: string | undefined;
        version?: number | undefined;
    }>, "many">;
    pagination: z.ZodObject<{
        page: z.ZodNumber;
        pageSize: z.ZodNumber;
        total: z.ZodNumber;
        totalPages: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        page: number;
        pageSize: number;
        total: number;
        totalPages: number;
    }, {
        page: number;
        pageSize: number;
        total: number;
        totalPages: number;
    }>;
}, "strip", z.ZodTypeAny, {
    data: {
        ticketNumber: string;
        type: "Vehicle" | "Container" | "Silo" | "Manual";
        status: "Draft" | "InProgress" | "Completed" | "Cancelled" | "Error";
        commodity: "WHEAT" | "BARLEY" | "RAPESEED" | "SOYMEAL" | "COMPOUND_FEED" | "FERTILIZER" | "OTHER";
        tolerancePercent: number;
        autoAssigned: boolean;
        version: number;
        id?: string | undefined;
        licensePlate?: string | undefined;
        containerNumber?: string | undefined;
        siloId?: string | undefined;
        commodityDescription?: string | undefined;
        grossWeight?: {
            scaleId: string;
            timestamp: string;
            weight: number;
            unit: "kg" | "t";
            notes?: string | undefined;
            operatorId?: string | undefined;
        } | undefined;
        tareWeight?: {
            scaleId: string;
            timestamp: string;
            weight: number;
            unit: "kg" | "t";
            notes?: string | undefined;
            operatorId?: string | undefined;
        } | undefined;
        netWeight?: number | undefined;
        netWeightUnit?: "kg" | "t" | undefined;
        expectedWeight?: number | undefined;
        isWithinTolerance?: boolean | undefined;
        contractId?: string | undefined;
        orderId?: string | undefined;
        deliveryNoteId?: string | undefined;
        anprRecordId?: string | undefined;
        gateId?: string | undefined;
        slotId?: string | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        completedAt?: string | undefined;
    }[];
    pagination: {
        page: number;
        pageSize: number;
        total: number;
        totalPages: number;
    };
}, {
    data: {
        ticketNumber: string;
        type: "Vehicle" | "Container" | "Silo" | "Manual";
        status: "Draft" | "InProgress" | "Completed" | "Cancelled" | "Error";
        commodity: "WHEAT" | "BARLEY" | "RAPESEED" | "SOYMEAL" | "COMPOUND_FEED" | "FERTILIZER" | "OTHER";
        id?: string | undefined;
        licensePlate?: string | undefined;
        containerNumber?: string | undefined;
        siloId?: string | undefined;
        commodityDescription?: string | undefined;
        grossWeight?: {
            scaleId: string;
            timestamp: string;
            weight: number;
            unit: "kg" | "t";
            notes?: string | undefined;
            operatorId?: string | undefined;
        } | undefined;
        tareWeight?: {
            scaleId: string;
            timestamp: string;
            weight: number;
            unit: "kg" | "t";
            notes?: string | undefined;
            operatorId?: string | undefined;
        } | undefined;
        netWeight?: number | undefined;
        netWeightUnit?: "kg" | "t" | undefined;
        expectedWeight?: number | undefined;
        tolerancePercent?: number | undefined;
        isWithinTolerance?: boolean | undefined;
        contractId?: string | undefined;
        orderId?: string | undefined;
        deliveryNoteId?: string | undefined;
        anprRecordId?: string | undefined;
        autoAssigned?: boolean | undefined;
        gateId?: string | undefined;
        slotId?: string | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        completedAt?: string | undefined;
        version?: number | undefined;
    }[];
    pagination: {
        page: number;
        pageSize: number;
        total: number;
        totalPages: number;
    };
}>;
//# sourceMappingURL=weighing-ticket-contracts.d.ts.map