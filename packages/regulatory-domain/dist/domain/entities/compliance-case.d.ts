import { z } from 'zod';
export declare const ComplianceCaseTypeEnum: z.ZodEnum<["Violation", "AuditFinding", "DocMissing", "LabelRevocation", "Contamination", "Expiry", "Other"]>;
export type ComplianceCaseType = z.infer<typeof ComplianceCaseTypeEnum>;
export declare const ComplianceSeverityEnum: z.ZodEnum<["Minor", "Major", "Critical"]>;
export type ComplianceSeverity = z.infer<typeof ComplianceSeverityEnum>;
export declare const ComplianceCaseStatusEnum: z.ZodEnum<["Open", "Investigating", "ActionRequired", "Resolved", "Closed", "Escalated"]>;
export type ComplianceCaseStatus = z.infer<typeof ComplianceCaseStatusEnum>;
export declare const ComplianceCaseSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    tenantId: z.ZodString;
    caseNumber: z.ZodString;
    type: z.ZodEnum<["Violation", "AuditFinding", "DocMissing", "LabelRevocation", "Contamination", "Expiry", "Other"]>;
    severity: z.ZodEnum<["Minor", "Major", "Critical"]>;
    ref: z.ZodObject<{
        type: z.ZodEnum<["Batch", "Contract", "Site", "Shipment", "Supplier", "Process"]>;
        id: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: "Process" | "Site" | "Contract" | "Supplier" | "Batch" | "Shipment";
        id: string;
    }, {
        type: "Process" | "Site" | "Contract" | "Supplier" | "Batch" | "Shipment";
        id: string;
    }>;
    title: z.ZodString;
    description: z.ZodString;
    policyId: z.ZodOptional<z.ZodString>;
    labelCode: z.ZodOptional<z.ZodString>;
    ruleId: z.ZodOptional<z.ZodString>;
    detectedAt: z.ZodString;
    detectedBy: z.ZodString;
    detectionMethod: z.ZodOptional<z.ZodEnum<["Automated", "Audit", "Sample", "Manual"]>>;
    status: z.ZodDefault<z.ZodEnum<["Open", "Investigating", "ActionRequired", "Resolved", "Closed", "Escalated"]>>;
    immediateAction: z.ZodOptional<z.ZodString>;
    capaId: z.ZodOptional<z.ZodString>;
    impactedBatches: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    impactedLabels: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    resolvedAt: z.ZodOptional<z.ZodString>;
    resolvedBy: z.ZodOptional<z.ZodString>;
    resolution: z.ZodOptional<z.ZodString>;
    closedAt: z.ZodOptional<z.ZodString>;
    closedBy: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodOptional<z.ZodString>;
    updatedAt: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    type: "Other" | "Violation" | "AuditFinding" | "DocMissing" | "LabelRevocation" | "Contamination" | "Expiry";
    status: "Open" | "Investigating" | "ActionRequired" | "Resolved" | "Closed" | "Escalated";
    description: string;
    tenantId: string;
    severity: "Minor" | "Major" | "Critical";
    title: string;
    caseNumber: string;
    ref: {
        type: "Process" | "Site" | "Contract" | "Supplier" | "Batch" | "Shipment";
        id: string;
    };
    detectedAt: string;
    detectedBy: string;
    ruleId?: string | undefined;
    id?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    policyId?: string | undefined;
    labelCode?: string | undefined;
    detectionMethod?: "Sample" | "Automated" | "Audit" | "Manual" | undefined;
    immediateAction?: string | undefined;
    capaId?: string | undefined;
    impactedBatches?: string[] | undefined;
    impactedLabels?: string[] | undefined;
    resolvedAt?: string | undefined;
    resolvedBy?: string | undefined;
    resolution?: string | undefined;
    closedAt?: string | undefined;
    closedBy?: string | undefined;
}, {
    type: "Other" | "Violation" | "AuditFinding" | "DocMissing" | "LabelRevocation" | "Contamination" | "Expiry";
    description: string;
    tenantId: string;
    severity: "Minor" | "Major" | "Critical";
    title: string;
    caseNumber: string;
    ref: {
        type: "Process" | "Site" | "Contract" | "Supplier" | "Batch" | "Shipment";
        id: string;
    };
    detectedAt: string;
    detectedBy: string;
    status?: "Open" | "Investigating" | "ActionRequired" | "Resolved" | "Closed" | "Escalated" | undefined;
    ruleId?: string | undefined;
    id?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    policyId?: string | undefined;
    labelCode?: string | undefined;
    detectionMethod?: "Sample" | "Automated" | "Audit" | "Manual" | undefined;
    immediateAction?: string | undefined;
    capaId?: string | undefined;
    impactedBatches?: string[] | undefined;
    impactedLabels?: string[] | undefined;
    resolvedAt?: string | undefined;
    resolvedBy?: string | undefined;
    resolution?: string | undefined;
    closedAt?: string | undefined;
    closedBy?: string | undefined;
}>;
export type ComplianceCase = z.infer<typeof ComplianceCaseSchema>;
export declare const CreateComplianceCaseSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    tenantId: z.ZodString;
    caseNumber: z.ZodString;
    type: z.ZodEnum<["Violation", "AuditFinding", "DocMissing", "LabelRevocation", "Contamination", "Expiry", "Other"]>;
    severity: z.ZodEnum<["Minor", "Major", "Critical"]>;
    ref: z.ZodObject<{
        type: z.ZodEnum<["Batch", "Contract", "Site", "Shipment", "Supplier", "Process"]>;
        id: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: "Process" | "Site" | "Contract" | "Supplier" | "Batch" | "Shipment";
        id: string;
    }, {
        type: "Process" | "Site" | "Contract" | "Supplier" | "Batch" | "Shipment";
        id: string;
    }>;
    title: z.ZodString;
    description: z.ZodString;
    policyId: z.ZodOptional<z.ZodString>;
    labelCode: z.ZodOptional<z.ZodString>;
    ruleId: z.ZodOptional<z.ZodString>;
    detectedAt: z.ZodString;
    detectedBy: z.ZodString;
    detectionMethod: z.ZodOptional<z.ZodEnum<["Automated", "Audit", "Sample", "Manual"]>>;
    status: z.ZodDefault<z.ZodEnum<["Open", "Investigating", "ActionRequired", "Resolved", "Closed", "Escalated"]>>;
    immediateAction: z.ZodOptional<z.ZodString>;
    capaId: z.ZodOptional<z.ZodString>;
    impactedBatches: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    impactedLabels: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    resolvedAt: z.ZodOptional<z.ZodString>;
    resolvedBy: z.ZodOptional<z.ZodString>;
    resolution: z.ZodOptional<z.ZodString>;
    closedAt: z.ZodOptional<z.ZodString>;
    closedBy: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodOptional<z.ZodString>;
    updatedAt: z.ZodOptional<z.ZodString>;
}, "id" | "createdAt" | "updatedAt" | "caseNumber" | "resolvedAt" | "closedAt">, "strip", z.ZodTypeAny, {
    type: "Other" | "Violation" | "AuditFinding" | "DocMissing" | "LabelRevocation" | "Contamination" | "Expiry";
    status: "Open" | "Investigating" | "ActionRequired" | "Resolved" | "Closed" | "Escalated";
    description: string;
    tenantId: string;
    severity: "Minor" | "Major" | "Critical";
    title: string;
    ref: {
        type: "Process" | "Site" | "Contract" | "Supplier" | "Batch" | "Shipment";
        id: string;
    };
    detectedAt: string;
    detectedBy: string;
    ruleId?: string | undefined;
    policyId?: string | undefined;
    labelCode?: string | undefined;
    detectionMethod?: "Sample" | "Automated" | "Audit" | "Manual" | undefined;
    immediateAction?: string | undefined;
    capaId?: string | undefined;
    impactedBatches?: string[] | undefined;
    impactedLabels?: string[] | undefined;
    resolvedBy?: string | undefined;
    resolution?: string | undefined;
    closedBy?: string | undefined;
}, {
    type: "Other" | "Violation" | "AuditFinding" | "DocMissing" | "LabelRevocation" | "Contamination" | "Expiry";
    description: string;
    tenantId: string;
    severity: "Minor" | "Major" | "Critical";
    title: string;
    ref: {
        type: "Process" | "Site" | "Contract" | "Supplier" | "Batch" | "Shipment";
        id: string;
    };
    detectedAt: string;
    detectedBy: string;
    status?: "Open" | "Investigating" | "ActionRequired" | "Resolved" | "Closed" | "Escalated" | undefined;
    ruleId?: string | undefined;
    policyId?: string | undefined;
    labelCode?: string | undefined;
    detectionMethod?: "Sample" | "Automated" | "Audit" | "Manual" | undefined;
    immediateAction?: string | undefined;
    capaId?: string | undefined;
    impactedBatches?: string[] | undefined;
    impactedLabels?: string[] | undefined;
    resolvedBy?: string | undefined;
    resolution?: string | undefined;
    closedBy?: string | undefined;
}>;
export type CreateComplianceCase = z.infer<typeof CreateComplianceCaseSchema>;
export declare const UpdateComplianceCaseSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    tenantId: z.ZodOptional<z.ZodString>;
    caseNumber: z.ZodOptional<z.ZodString>;
    type: z.ZodOptional<z.ZodEnum<["Violation", "AuditFinding", "DocMissing", "LabelRevocation", "Contamination", "Expiry", "Other"]>>;
    severity: z.ZodOptional<z.ZodEnum<["Minor", "Major", "Critical"]>>;
    ref: z.ZodOptional<z.ZodObject<{
        type: z.ZodEnum<["Batch", "Contract", "Site", "Shipment", "Supplier", "Process"]>;
        id: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: "Process" | "Site" | "Contract" | "Supplier" | "Batch" | "Shipment";
        id: string;
    }, {
        type: "Process" | "Site" | "Contract" | "Supplier" | "Batch" | "Shipment";
        id: string;
    }>>;
    title: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    policyId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    labelCode: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    ruleId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    detectedAt: z.ZodOptional<z.ZodString>;
    detectedBy: z.ZodOptional<z.ZodString>;
    detectionMethod: z.ZodOptional<z.ZodOptional<z.ZodEnum<["Automated", "Audit", "Sample", "Manual"]>>>;
    status: z.ZodOptional<z.ZodDefault<z.ZodEnum<["Open", "Investigating", "ActionRequired", "Resolved", "Closed", "Escalated"]>>>;
    immediateAction: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    capaId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    impactedBatches: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
    impactedLabels: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
    resolvedAt: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    resolvedBy: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    resolution: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    closedAt: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    closedBy: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    updatedAt: z.ZodOptional<z.ZodOptional<z.ZodString>>;
}, "id" | "tenantId" | "createdAt" | "caseNumber">, "strip", z.ZodTypeAny, {
    type?: "Other" | "Violation" | "AuditFinding" | "DocMissing" | "LabelRevocation" | "Contamination" | "Expiry" | undefined;
    status?: "Open" | "Investigating" | "ActionRequired" | "Resolved" | "Closed" | "Escalated" | undefined;
    ruleId?: string | undefined;
    description?: string | undefined;
    updatedAt?: string | undefined;
    policyId?: string | undefined;
    labelCode?: string | undefined;
    severity?: "Minor" | "Major" | "Critical" | undefined;
    title?: string | undefined;
    ref?: {
        type: "Process" | "Site" | "Contract" | "Supplier" | "Batch" | "Shipment";
        id: string;
    } | undefined;
    detectedAt?: string | undefined;
    detectedBy?: string | undefined;
    detectionMethod?: "Sample" | "Automated" | "Audit" | "Manual" | undefined;
    immediateAction?: string | undefined;
    capaId?: string | undefined;
    impactedBatches?: string[] | undefined;
    impactedLabels?: string[] | undefined;
    resolvedAt?: string | undefined;
    resolvedBy?: string | undefined;
    resolution?: string | undefined;
    closedAt?: string | undefined;
    closedBy?: string | undefined;
}, {
    type?: "Other" | "Violation" | "AuditFinding" | "DocMissing" | "LabelRevocation" | "Contamination" | "Expiry" | undefined;
    status?: "Open" | "Investigating" | "ActionRequired" | "Resolved" | "Closed" | "Escalated" | undefined;
    ruleId?: string | undefined;
    description?: string | undefined;
    updatedAt?: string | undefined;
    policyId?: string | undefined;
    labelCode?: string | undefined;
    severity?: "Minor" | "Major" | "Critical" | undefined;
    title?: string | undefined;
    ref?: {
        type: "Process" | "Site" | "Contract" | "Supplier" | "Batch" | "Shipment";
        id: string;
    } | undefined;
    detectedAt?: string | undefined;
    detectedBy?: string | undefined;
    detectionMethod?: "Sample" | "Automated" | "Audit" | "Manual" | undefined;
    immediateAction?: string | undefined;
    capaId?: string | undefined;
    impactedBatches?: string[] | undefined;
    impactedLabels?: string[] | undefined;
    resolvedAt?: string | undefined;
    resolvedBy?: string | undefined;
    resolution?: string | undefined;
    closedAt?: string | undefined;
    closedBy?: string | undefined;
}>;
export type UpdateComplianceCase = z.infer<typeof UpdateComplianceCaseSchema>;
//# sourceMappingURL=compliance-case.d.ts.map