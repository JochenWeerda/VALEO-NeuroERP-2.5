import { z } from 'zod';
export declare const TaxChargeScopeEnum: z.ZodEnum<["SKU", "Commodity", "All"]>;
export type TaxChargeScope = z.infer<typeof TaxChargeScopeEnum>;
export declare const TaxChargeMethodEnum: z.ZodEnum<["ABS", "PCT"]>;
export type TaxChargeMethod = z.infer<typeof TaxChargeMethodEnum>;
export declare const TaxChargeRefSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    tenantId: z.ZodString;
    code: z.ZodString;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    type: z.ZodEnum<["VAT", "Tax", "Levy", "Fee", "Deposit", "Surcharge", "Other"]>;
    method: z.ZodEnum<["ABS", "PCT"]>;
    rateOrAmount: z.ZodNumber;
    scope: z.ZodEnum<["SKU", "Commodity", "All"]>;
    scopeValue: z.ZodOptional<z.ZodString>;
    validFrom: z.ZodString;
    validTo: z.ZodOptional<z.ZodString>;
    country: z.ZodDefault<z.ZodString>;
    region: z.ZodOptional<z.ZodString>;
    active: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodOptional<z.ZodString>;
    createdBy: z.ZodOptional<z.ZodString>;
    updatedAt: z.ZodOptional<z.ZodString>;
    updatedBy: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    code: string;
    type: "Surcharge" | "VAT" | "Tax" | "Levy" | "Fee" | "Deposit" | "Other";
    active: boolean;
    tenantId: string;
    name: string;
    validFrom: string;
    scope: "SKU" | "Commodity" | "All";
    method: "ABS" | "PCT";
    rateOrAmount: number;
    country: string;
    description?: string | undefined;
    id?: string | undefined;
    validTo?: string | undefined;
    createdAt?: string | undefined;
    createdBy?: string | undefined;
    updatedAt?: string | undefined;
    updatedBy?: string | undefined;
    scopeValue?: string | undefined;
    region?: string | undefined;
}, {
    code: string;
    type: "Surcharge" | "VAT" | "Tax" | "Levy" | "Fee" | "Deposit" | "Other";
    tenantId: string;
    name: string;
    validFrom: string;
    scope: "SKU" | "Commodity" | "All";
    method: "ABS" | "PCT";
    rateOrAmount: number;
    description?: string | undefined;
    active?: boolean | undefined;
    id?: string | undefined;
    validTo?: string | undefined;
    createdAt?: string | undefined;
    createdBy?: string | undefined;
    updatedAt?: string | undefined;
    updatedBy?: string | undefined;
    scopeValue?: string | undefined;
    country?: string | undefined;
    region?: string | undefined;
}>;
export type TaxChargeRef = z.infer<typeof TaxChargeRefSchema>;
export declare const CreateTaxChargeRefSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodString>;
    tenantId: z.ZodString;
    code: z.ZodString;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    type: z.ZodEnum<["VAT", "Tax", "Levy", "Fee", "Deposit", "Surcharge", "Other"]>;
    method: z.ZodEnum<["ABS", "PCT"]>;
    rateOrAmount: z.ZodNumber;
    scope: z.ZodEnum<["SKU", "Commodity", "All"]>;
    scopeValue: z.ZodOptional<z.ZodString>;
    validFrom: z.ZodString;
    validTo: z.ZodOptional<z.ZodString>;
    country: z.ZodDefault<z.ZodString>;
    region: z.ZodOptional<z.ZodString>;
    active: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodOptional<z.ZodString>;
    createdBy: z.ZodOptional<z.ZodString>;
    updatedAt: z.ZodOptional<z.ZodString>;
    updatedBy: z.ZodOptional<z.ZodString>;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    code: string;
    type: "Surcharge" | "VAT" | "Tax" | "Levy" | "Fee" | "Deposit" | "Other";
    active: boolean;
    tenantId: string;
    name: string;
    validFrom: string;
    scope: "SKU" | "Commodity" | "All";
    method: "ABS" | "PCT";
    rateOrAmount: number;
    country: string;
    description?: string | undefined;
    validTo?: string | undefined;
    createdBy?: string | undefined;
    updatedBy?: string | undefined;
    scopeValue?: string | undefined;
    region?: string | undefined;
}, {
    code: string;
    type: "Surcharge" | "VAT" | "Tax" | "Levy" | "Fee" | "Deposit" | "Other";
    tenantId: string;
    name: string;
    validFrom: string;
    scope: "SKU" | "Commodity" | "All";
    method: "ABS" | "PCT";
    rateOrAmount: number;
    description?: string | undefined;
    active?: boolean | undefined;
    validTo?: string | undefined;
    createdBy?: string | undefined;
    updatedBy?: string | undefined;
    scopeValue?: string | undefined;
    country?: string | undefined;
    region?: string | undefined;
}>;
export type CreateTaxChargeRef = z.infer<typeof CreateTaxChargeRefSchema>;
export declare const UpdateTaxChargeRefSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    tenantId: z.ZodOptional<z.ZodString>;
    code: z.ZodOptional<z.ZodString>;
    name: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    type: z.ZodOptional<z.ZodEnum<["VAT", "Tax", "Levy", "Fee", "Deposit", "Surcharge", "Other"]>>;
    method: z.ZodOptional<z.ZodEnum<["ABS", "PCT"]>>;
    rateOrAmount: z.ZodOptional<z.ZodNumber>;
    scope: z.ZodOptional<z.ZodEnum<["SKU", "Commodity", "All"]>>;
    scopeValue: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    validFrom: z.ZodOptional<z.ZodString>;
    validTo: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    country: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    region: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    active: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    createdAt: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    createdBy: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    updatedAt: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    updatedBy: z.ZodOptional<z.ZodOptional<z.ZodString>>;
}, "id" | "tenantId" | "createdAt" | "createdBy">, "strip", z.ZodTypeAny, {
    code?: string | undefined;
    type?: "Surcharge" | "VAT" | "Tax" | "Levy" | "Fee" | "Deposit" | "Other" | undefined;
    description?: string | undefined;
    active?: boolean | undefined;
    name?: string | undefined;
    validFrom?: string | undefined;
    validTo?: string | undefined;
    updatedAt?: string | undefined;
    updatedBy?: string | undefined;
    scope?: "SKU" | "Commodity" | "All" | undefined;
    method?: "ABS" | "PCT" | undefined;
    rateOrAmount?: number | undefined;
    scopeValue?: string | undefined;
    country?: string | undefined;
    region?: string | undefined;
}, {
    code?: string | undefined;
    type?: "Surcharge" | "VAT" | "Tax" | "Levy" | "Fee" | "Deposit" | "Other" | undefined;
    description?: string | undefined;
    active?: boolean | undefined;
    name?: string | undefined;
    validFrom?: string | undefined;
    validTo?: string | undefined;
    updatedAt?: string | undefined;
    updatedBy?: string | undefined;
    scope?: "SKU" | "Commodity" | "All" | undefined;
    method?: "ABS" | "PCT" | undefined;
    rateOrAmount?: number | undefined;
    scopeValue?: string | undefined;
    country?: string | undefined;
    region?: string | undefined;
}>;
export type UpdateTaxChargeRef = z.infer<typeof UpdateTaxChargeRefSchema>;
export declare const COMMON_TAX_RATES: {
    VAT_19: {
        code: string;
        name: string;
        type: "VAT";
        method: "PCT";
        rateOrAmount: number;
    };
    VAT_7: {
        code: string;
        name: string;
        type: "VAT";
        method: "PCT";
        rateOrAmount: number;
    };
    VAT_0: {
        code: string;
        name: string;
        type: "VAT";
        method: "PCT";
        rateOrAmount: number;
    };
};
//# sourceMappingURL=tax-charge-ref.d.ts.map